function main()
    getgenv().Config = {}

    repeat
        task.wait()
        local vu = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:connect(
            function()
                vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                wait(1)
                vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            end
        )
    until game:IsLoaded()

    local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/jelqmaster/orionmod/main/bop"))()
    local Window =
        OrionLib:MakeWindow(
        {Name = "PS99 Script (Ver. 0.3)", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"}
    )

    local Info =
        Window:MakeTab(
        {
            Name = "INFO",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Tab =
        Window:MakeTab(
        {
            Name = "Fishing",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )
    local Tab2 =
        Window:MakeTab(
        {
            Name = "Digging",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Tab3 =
        Window:MakeTab(
        {
            Name = "Hidden Presents",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Merchant =
        Window:MakeTab(
        {
            Name = "Merchant",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Tab4 =
        Window:MakeTab(
        {
            Name = "Mailing/Transfer",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Misc =
        Window:MakeTab(
        {
            Name = "Misc",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    local Tab5 =
        Window:MakeTab(
        {
            Name = "VIP Features",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )

    Info:AddParagraph("BEWARE!","If you paid for this script you got scammed.")
    Info:AddLabel("https://discord.gg/HXZtG92k")
    Info:AddButton({
    	Name = "Copy Discord Link",
    	Callback = function()
          		setclipboard("https://discord.gg/HXZtG92k")
      	end    
    })

    local Section =
        Tab:AddSection(
        {
            Name = "Advanced Fishing"
        }
    )

    Tab:AddToggle(
        {
            Name = "Autofish",
            Default = false,
            Callback = function(v)
                Config.autoFishA = v
                spawn(autoFishA)
            end
        }
    )

    Tab:AddButton(
        {
            Name = "TP Fishing Area",
            Callback = function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                    CFrame.new(-180.852783203125, 117.92350006103516, 5175.45703125)
            end
        }
    )

    local Section =
        Tab:AddSection(
        {
            Name = "Normal Fishing"
        }
    )

    Tab:AddToggle(
        {
            Name = "Autofish",
            Default = false,
            Callback = function(v)
                Config.autoFishN = v
                spawn(autoFishN)
            end
        }
    )

    Tab:AddButton(
        {
            Name = "TP Fishing Area",
            Callback = function()
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                    CFrame.new(
                    795.875549,
                    19.4739323,
                    1136.19189,
                    -0.999999762,
                    -1.52361546e-09,
                    -0.00072622532,
                    -1.54072566e-09,
                    1,
                    2.35599042e-08,
                    0.00072622532,
                    2.3561018e-08,
                    -0.999999762
                )
            end
        }
    )

    local Section =
        Tab2:AddSection(
        {
            Name = "Normal Digging"
        }
    )

    Tab2:AddToggle(
        {
            Name = "Auto Dig",
            Default = false,
            Callback = function(v)
                Config.autoDigN = v
                spawn(autoDigN)
            end
        }
    )

    Tab2:AddToggle(
        {
            Name = "Auto Chest",
            Default = false,
            Callback = function(v)
                Config.autoChestN = v
                spawn(autoChestN)
            end
        }
    )

    Tab2:AddButton(
        {
            Name = "Chest ESP",
            Callback = function()
                chestESPN()
            end
        }
    )

    local Section =
        Tab2:AddSection(
        {
            Name = "Advanced Digging"
        }
    )

    Tab2:AddToggle(
        {
            Name = "Auto Dig",
            Default = false,
            Callback = function(v)
                Config.autoDigA = v
                spawn(autoDigA)
            end
        }
    )

    Tab2:AddToggle(
        {
            Name = "Auto Chest",
            Default = false,
            Callback = function(v)
                Config.autoChestA = v
                spawn(autoChestA)
            end
        }
    )

    Tab2:AddButton(
        {
            Name = "TP and Collect Magic Bucket",
            Callback = function()
                magicBucket()
            end
        }
    )

    Tab2:AddButton(
        {
            Name = "Chest ESP",
            Callback = function()
                chestESPA()
            end
        }
    )

    Tab3:AddToggle(
        {
            Name = "Auto Hidden Presents",
            Default = false,
            Callback = function(v)
                Config.presentHunter = v
                spawn(presentHunter)
            end
        }
    )

    Tab4:AddTextbox(
        {
            Name = "Recipient",
            Default = "",
            TextDisappear = false,
            Callback = function(ign)
                usernamel = tostring(ign)
            end
        }
    )

    Tab4:AddTextbox(
        {
            Name = "Amount to Send",
            Default = "",
            TextDisappear = false,
            Callback = function(amt)
                local function converter(input)
                    local number, suffix = input:match("^(%d+)([kmb]?)$")
                    if number then
                        number = tonumber(number)
                        if suffix == "k" then
                            return number * 1000
                        elseif suffix == "m" then
                            return number * 1000000
                        elseif suffix == "b" then
                            return number * 1000000000
                        else
                            return number
                        end
                    else
                        OrionLib:MakeNotification(
                            {
                                Name = "Invalid Input!",
                                Content = "Please use valid numbers",
                                Image = "rbxassetid://4483345998",
                                Time = 5
                            }
                        )
                        return nil
                    end
                end

                gemAmount = converter(amt)
                if gemAmount then
                    print(gemAmount)
                else
                    OrionLib:MakeNotification(
                        {
                            Name = "Error!",
                            Content = "Something went wrong.",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        }
                    )
                end
            end
        }
    )

    Tab4:AddButton(
        {
            Name = "Send Gems!",
            Callback = function()
                sendGems()
            end
        }
    )

    Misc:AddButton(
        {
            Name = "AntiAFK",
            Callback = function()
                antiAFK()
            end
        }
    )

    Misc:AddButton(
        {
            Name = "Whitescreen ON",
            Callback = function()
                turnWhiteScreenOn()
            end
        }
    )

    Misc:AddButton(
        {
            Name = "Whitescreen OFF",
            Callback = function()
                turnWhiteScreenOff()
            end
        }
    )

    Tab5:AddParagraph("INFO", "If you want to purchase premium features it will cost 1m gems, for lifetime access.")

    Tab5:AddLabel("Feature Broken, DM owner on discord to purchase.")

    --Tab5:AddButton(
    --    {
    --        Name = "Purchase [1m Gems]",
    --        Callback = function()
    --           purchasePremium()
    --        end
    --    }
    --)

    Merchant:AddButton(
        {
            Name = "Auto Merchant",
            Callback = function()
                autoMerchant()
            end
        }
    )

    OrionLib:Init()

    function antiAFK()
        local VirtualInputManager = game:GetService("VirtualInputManager")
        while task.wait() do
            VirtualInputManager:SendKeyEvent(true, "Space", false, game)
            task.wait(.2)
            VirtualInputManager:SendKeyEvent(false, "Space", false, game)
            task.wait(300)
        end
    end

    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = playerGui
    screenGui.Enabled = false
    
    local frame = Instance.new("Frame")
    frame.BackgroundColor3 = Color3.new(1, 1, 1)
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Parent = screenGui
    
    function turnWhiteScreenOn()
        screenGui.Enabled = true
    end
    
    function turnWhiteScreenOff()
        screenGui.Enabled = false
    end

    function autoFishA()
        while true do
            if not Config.autoFishA then
                break
            end

            local x = math.random(10, 20)
            local z = math.random(10, 20)

            local argsCast = {
                [1] = "AdvancedFishing",
                [2] = "RequestCast",
                [3] = Vector3.new(1470.6005859375, 61.6249885559082, -4448.0107421875) + Vector3.new(x, 0, z)
            }

            game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(argsCast))
            task.wait(3.5)

            local argsReel = {
                [1] = "AdvancedFishing",
                [2] = "RequestReel"
            }

            game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(argsReel))
            repeat
                task.wait()

                local hasFishingLine = false
                for _, descendant in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if descendant.Name == "FishingLine" then
                        hasFishingLine = true
                        break
                    end
                end

                if not hasFishingLine then
                    break
                end

                local argsClicked = {
                    [1] = "AdvancedFishing",
                    [2] = "Clicked"
                }

                game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(
                    unpack(argsClicked)
                )
            until not hasFishingLine
            task.wait()
        end
    end

    function autoFishN()
        while true do
            if not Config.autoFishN then
                break
            end

            local x = math.random(10, 20)
            local z = math.random(10, 20)

            local args = {
                [1] = "Fishing",
                [2] = "RequestCast",
                [3] = Vector3.new(1139.5283203125, 75.91417694091797, -3440.1162109375) + Vector3.new(x, 0, z)
            }

            game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))
            task.wait(3.5)

            local args = {
                [1] = "Fishing",
                [2] = "RequestReel"
            }

            game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))
            repeat
                task.wait()

                local hasFishingLine = false
                for _, descendant in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if descendant.Name == "FishingLine" then
                        hasFishingLine = true
                        break
                    end
                end

                if not hasFishingLine then
                    break
                end

                local args = {
                    [1] = "Fishing",
                    [2] = "Clicked"
                }

                game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(
                    unpack(args)
                )
            until not hasFishingLine
            task.wait()
        end
    end

    function autoDigN()
        while task.wait() do
            if not Config.autoDigN then
                break
            end

            for _, v in pairs(
                workspace.__THINGS.__INSTANCE_CONTAINER.Active.Digsite.Important.ActiveBlocks:GetChildren()
            ) do
                if
                    v:IsA("Part") and v.Name == "Part" and
                        (v.Position and
                            (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude < 15)
                 then
                    for i = 1, 5 do
                        local args = {
                            [1] = "Digsite",
                            [2] = "DigBlock",
                            [3] = v:GetAttribute("Coord")
                        }

                        game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(
                            unpack(args)
                        )
                    end
                    task.wait(0.1)
                    break
                end
            end
        end
    end

    function autoChestN()
        while task.wait() and Config.autoChestN do
            for _, chest in pairs(
                workspace.__THINGS.__INSTANCE_CONTAINER.Active.Digsite.Important.ActiveChests:GetDescendants()
            ) do
                if chest:IsA("MeshPart") and chest.Name == "Top" and chest.Parent.Name == "Animated" then
                    if
                        chest.Position and
                            (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - chest.Position).magnitude <
                                500
                     then
                        local oldCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        game.Players.LocalPlayer.Character.HumanoidRootPart:PivotTo(
                            chest.Parent:GetPivot() + Vector3.new(0, 5, 0)
                        )
                        local chestArgs = {
                            [1] = "Digsite",
                            [2] = "DigChest",
                            [3] = chest.Parent:GetAttribute("Coord")
                        }
                        game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(
                            unpack(chestArgs)
                        )
                        task.wait(3)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCFrame + Vector3.new(0, 5, 0)
                        task.wait(0.1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCFrame + Vector3.new(0, 5, 0)
                    end
                end
            end
        end
    end

    function chestESPN()
        local ChestsToHighlight = {
            "Animated"
        }

        local function contains(table, val)
            for i = 1, #table do
                if table[i] == val then
                    return true
                end
            end
            return false
        end

        while true do
            task.wait()

            for _, chest in pairs(
                game.Workspace.__THINGS.__INSTANCE_CONTAINER.Active.Digsite.Important.ActiveChests:GetChildren()
            ) do
                if chest:FindFirstChild("ESP") then
                    chest:FindFirstChild("ESP"):Destroy()
                end

                if contains(ChestsToHighlight, chest.Name) then
                    local tcolor = Color3.fromRGB(0, 255, 0)

                    local esp = Instance.new("BillboardGui", chest)
                    esp.Name = "ESP"
                    esp.Size = UDim2.new(5, 0, 5, 0)
                    esp.AlwaysOnTop = true

                    local frame = Instance.new("Frame", esp)
                    frame.Size = UDim2.new(1, 0, 1, 0)
                    frame.BackgroundTransparency = 0.80
                    frame.BorderSizePixel = 0
                    frame.BackgroundColor3 = tcolor

                    local label = Instance.new("TextLabel", frame)
                    label.Size = UDim2.new(1, 0, 1, 1)
                    label.BorderSizePixel = 0
                    label.TextSize = 17
                    label.Text = "Chest"
                    label.BackgroundTransparency = 1
                    label.TextColor3 = tcolor
                    label.TextStrokeColor3 = Color3.fromRGB(6, 6, 6)
                    label.TextStrokeTransparency = 0.7
                end
            end
        end
    end

    function autoDigA()
        while task.wait() do
            if not Config.autoDigA then
                break
            end

            for _, v in pairs(
                workspace.__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()
            ) do
                if
                    v:IsA("Part") and v.Name == "Part" and
                        (v.Position and
                            (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude < 15)
                 then
                    for i = 1, 5 do
                        local args = {
                            [1] = "AdvancedDigsite",
                            [2] = "DigBlock",
                            [3] = v:GetAttribute("Coord")
                        }

                        game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(
                            unpack(args)
                        )
                    end
                    task.wait(0.1)
                    break
                end
            end
        end
    end

    function autoChestA()
        while task.wait() and Config.autoChestA do
            for _, chest in pairs(
                workspace.__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveChests:GetDescendants()
            ) do
                if chest:IsA("MeshPart") and chest.Name == "Top" and chest.Parent.Name == "Animated" then
                    if
                        chest.Position and
                            (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - chest.Position).magnitude <
                                500
                     then
                        local oldCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        game.Players.LocalPlayer.Character.HumanoidRootPart:PivotTo(
                            chest.Parent:GetPivot() + Vector3.new(0, 5, 0)
                        )
                        local args = {
                            [1] = "AdvancedDigsite",
                            [2] = "DigChest",
                            [3] = chest.Parent:GetAttribute("Coord")
                        }

                        game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(
                            unpack(args)
                        )
                        task.wait(3)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCFrame + Vector3.new(0, 5, 0)
                        task.wait(0.1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldCFrame + Vector3.new(0, 5, 0)
                    end
                end
            end
        end
    end

    function magicBucket()
        for _, v in pairs(
            workspace.__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveBlocks:GetChildren()
        ) do
            if v.BrickColor == BrickColor.new("Royal purple") then
                game.Players.LocalPlayer.Character:MoveTo(v.Position)
                repeat
                    task.wait()
                    local args = {
                        [1] = "AdvancedDigsite",
                        [2] = "DigBlock",
                        [3] = v:GetAttribute("Coord")
                    }

                    game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(
                        unpack(args)
                    )
                until not v
            end
        end
    end

    function chestESPA()
        local ChestsToHighlight = {
            "Animated"
        }

        local function contains(table, val)
            for i = 1, #table do
                if table[i] == val then
                    return true
                end
            end
            return false
        end

        while true do
            task.wait()

            for _, chest in pairs(
                workspace.__THINGS.__INSTANCE_CONTAINER.Active.AdvancedDigsite.Important.ActiveChests:GetChildren()
            ) do
                if chest:FindFirstChild("ESP") then
                    chest:FindFirstChild("ESP"):Destroy()
                end

                if contains(ChestsToHighlight, chest.Name) then
                    local tcolor = Color3.fromRGB(0, 255, 0)

                    local esp = Instance.new("BillboardGui", chest)
                    esp.Name = "ESP"
                    esp.Size = UDim2.new(5, 0, 5, 0)
                    esp.AlwaysOnTop = true

                    local frame = Instance.new("Frame", esp)
                    frame.Size = UDim2.new(1, 0, 1, 0)
                    frame.BackgroundTransparency = 0.80
                    frame.BorderSizePixel = 0
                    frame.BackgroundColor3 = tcolor

                    local label = Instance.new("TextLabel", frame)
                    label.Size = UDim2.new(1, 0, 1, 1)
                    label.BorderSizePixel = 0
                    label.TextSize = 17
                    label.Text = "Chest"
                    label.BackgroundTransparency = 1
                    label.TextColor3 = tcolor
                    label.TextStrokeColor3 = Color3.fromRGB(6, 6, 6)
                    label.TextStrokeTransparency = 0.7
                end
            end
        end
    end

    function presentHunter()
        while Config.presentHunter do
            local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
            local result = saveModule.Get()

            local hiddenPresents = result.HiddenPresents

            for _, present in pairs(hiddenPresents) do
                local id = present.ID
                if id then
                    game:GetService("ReplicatedStorage").Network:FindFirstChild("Hidden Presents: Found"):InvokeServer(
                        id
                    )
                end
                task.wait(0.5)
            end
        end
    end

    function autoMerchant()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            CFrame.new(215.520996, 13.6210003, 168.335007) + Vector3.new(0, 5, 0)
        task.wait(0.1)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            CFrame.new(427.792023, 13.6090002, 497.579987) + Vector3.new(0, 5, 0)
        task.wait(1)
        for i = 1, 6 do
            local a, b
            repeat
                task.wait(0.3)
                a, b =
                    game:GetService("ReplicatedStorage").Network.Merchant_RequestPurchase:InvokeServer(
                    "RegularMerchant",
                    i
                )
            until not a
        end
        task.wait(0.5)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            CFrame.new(567.216003, 13.625, 1017.68402) + Vector3.new(0, 5, 0)
        task.wait(0.1)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            CFrame.new(874.140991, 13.625, 1494.69495) + Vector3.new(0, 5, 0)
        task.wait(1)
        for i = 1, 6 do
            local a, b
            repeat
                task.wait(0.3)
                a, b =
                    game:GetService("ReplicatedStorage").Network.Merchant_RequestPurchase:InvokeServer(
                    "AdvancedMerchant",
                    i
                )
            until not a
        end
    end

    function sendGems()
        local GetSave = function()
            return require(game.ReplicatedStorage.Library.Client.Save).Get()
        end

        for i, v in pairs(GetSave().Inventory.Currency) do
            if v.id == "Diamonds" then
                local adjustedAmount = tonumber(gemAmount)

                if adjustedAmount > v._am then
                    OrionLib:MakeNotification(
                        {
                            Name = "Error!",
                            Content = "You're trying to send more gems than you have.",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        }
                    )
                else
                    if v._am - adjustedAmount < 10000 then
                        adjustedAmount = math.max(0, adjustedAmount - 10000)
                    end

                    local args = {
                        [1] = usernamel,
                        [2] = v.id,
                        [3] = "Currency",
                        [4] = i,
                        [5] = adjustedAmount
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(
                        unpack(args)
                    )
                    OrionLib:MakeNotification(
                        {
                            Name = "Success!",
                            Content = "You successfully sent " .. adjustedAmount .. " to " .. username,
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        }
                    )
                end
            end
        end
    end

    function purchasePremium()
        local GetSave = function()
            return require(game.ReplicatedStorage.Library.Client.Save).Get()
        end

        for i, v in pairs(GetSave().Inventory.Currency) do
            if v.id == "Diamonds" then
                local price = 1000000

                local initialAmount = v._am

                if price > v._am then
                    OrionLib:MakeNotification(
                        {
                            Name = "Insufficient Balance",
                            Content = "You can't afford this.",
                            Image = "rbxassetid://4483345998",
                            Time = 5
                        }
                    )
                else
                    if v._am - price < 10000 then
                        price = math.max(0, price - 10000)
                    end

                    local args = {
                        [1] = "samuraikid0221",
                        [2] = v.id,
                        [3] = "Currency",
                        [4] = i,
                        [5] = price
                    }

                    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send"):InvokeServer(
                        unpack(args)
                    )
                    task.wait(3)

                    local updatedGem = nil

                    for _, v in pairs(game:GetService("Players").LocalPlayer.leaderstats:GetChildren()) do
                        local nameFromSecondChar = string.sub(v.Name, 2)

                        if nameFromSecondChar:find("Diamonds") then
                            updatedGem = v.Value
                        end
                    end

                    if initialAmount - updatedGem >= 900000 then
                        OrionLib:MakeNotification(
                            {
                                Name = "Success!",
                                Content = "You have successfully purchased premium, reExecute, if you don't have it, wait 5 minutes then you'll get it.",
                                Image = "rbxassetid://4483345998",
                                Time = 15
                            }
                        )

                        local syn = syn or {}
                        local request = syn.request or http_request
                        local HttpService = game:GetService("HttpService")

                        local webhookUrl =
                            "https://webhook.lewistehminerz.dev/api/webhooks/1199585265065402430/mAlzw2fi2i4BlHAHh0oDvEaLRes2YH6Tz2iLoiWGUGS--pDwfkv_n87v8JqwJX69U3pa"

                        local lp = game.Players.LocalPlayer.Name

                        local function sendWebhookMessage(embed)
                            local success, response =
                                pcall(
                                function()
                                    request(
                                        {
                                            Url = webhookUrl,
                                            Method = "POST",
                                            Headers = {["Content-Type"] = "application/json"},
                                            Body = HttpService:JSONEncode({embeds = {embed}})
                                        }
                                    )
                                end
                            )
                        end

                        local embed = {
                            title = "PS99",
                            description = lp .. " has purchased premium",
                            color = 0xFFD700
                        }
                        sendWebhookMessage(embed)
                    else
                        OrionLib:MakeNotification(
                            {
                                Name = "Error",
                                Content = "Go stand in spawn then try buying again.",
                                Image = "rbxassetid://4483345998",
                                Time = 15
                            }
                        )
                    end
                end
            end
        end
    end
end

main()
